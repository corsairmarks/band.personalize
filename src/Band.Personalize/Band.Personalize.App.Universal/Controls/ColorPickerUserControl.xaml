<controls:BindableUserControl
    x:Class="Band.Personalize.App.Universal.Controls.ColorPickerUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:Band.Personalize.App.Universal.Behaviors"
    xmlns:controls="using:Band.Personalize.App.Universal.Controls"
    xmlns:triggers="using:Band.Personalize.App.Universal.Triggers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="640"
    d:DesignWidth="360">
    <RelativePanel x:Name="ThePanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid x:Name="ColorPickerGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!-- TODO: bind safely to a string that may or may not convert, take into account UseAlpha -->
            <TextBox
                Grid.ColumnSpan="2"
                Grid.Row="0"
                Margin="0,0,0,8"
                Text="{x:Bind Path=HexadecimalString, Mode=TwoWay}"
                IsTextPredictionEnabled="False"
                IsSpellCheckEnabled="False" />
            <Grid Grid.Column="0" Grid.Row="1">
                <Grid x:Name="PickerGrid" SizeChanged="PickerGrid_SizeChanged">
                    <i:Interaction.Behaviors>
                        <behaviors:SquareBehavior x:Name="PickerGridSquareBehavior" />
                    </i:Interaction.Behaviors>
                    <Grid.Background>
                        <SolidColorBrush Color="{x:Bind Path=HueColor, Mode=OneWay}" />
                    </Grid.Background>
                    <Rectangle>
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Offset="0" Color="White"/>
                                <GradientStop Offset="1" Color="#00FFFFFF"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle>
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#00000000"/>
                                <GradientStop Offset="1" Color="Black"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Canvas
                        x:Name="PickerCanvas"
                        PointerPressed="PickerCanvas_OnPointerPressed"
                        PointerReleased="PickerCanvas_OnPointerReleased"
                        Background="Transparent"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                        <Grid
                            Margin="-7,-7,0,0"
                            Canvas.Left="{x:Bind Path=PointX, Mode=OneWay}"
                            Canvas.Top="{x:Bind Path=PointY, Mode=OneWay}">
                            <Ellipse
                                Stroke="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                StrokeThickness="3"
                                Width="14"
                                Height="14"
                                UseLayoutRounding="False" />
                            <Ellipse
                                Stroke="{ThemeResource SystemControlForegroundAltHighBrush}"
                                StrokeThickness="1"
                                Width="12"
                                Height="12"
                                UseLayoutRounding="False" />
                        </Grid>
                    </Canvas>
                </Grid>
            </Grid>
            <Slider
                Grid.Column="1"
                Grid.Row="1"
                x:Name="HueSlider"
                Style="{StaticResource AlphaChannelSlider}"
                Orientation="Vertical"
                Maximum="360"
                Minimum="0"
                Value="{x:Bind Path=Hue, Mode=TwoWay}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FFFF0000"/>
                        <GradientStop Offset="0.2" Color="#FFFF00FF"/>
                        <GradientStop Offset="0.4" Color="#FF0000FF"/>
                        <GradientStop Offset="0.6" Color="#FF00FF00"/>
                        <GradientStop Offset="0.8" Color="#FFFFFF00"/>
                        <GradientStop Offset="1" Color="#FFFF0000"/>
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>
        </Grid>

        <StackPanel
            x:Name="ColorSliderPanel"
            MinWidth="176">
            <Grid Margin="0,0,0,4" Background="{ThemeResource AlphaTileBrush}">
                <Rectangle Height="32">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="{x:Bind Path=SwatchColor, Mode=OneWay}" />
                    </Rectangle.Fill>
                </Rectangle>
            </Grid>
            <controls:RgbColorChannelUserControl
                x:Uid="AlphaChannel"
                Visibility="{x:Bind Path=UseAlpha, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                Header="A"
                Channel="{x:Bind Path=Alpha, Mode=TwoWay, FallbackValue=0}">
                <controls:RgbColorChannelUserControl.SliderTrackBackground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="{x:Bind Path=AlphaStartColor, Mode=OneWay}"/>
                        <GradientStop Offset="1" Color="{x:Bind Path=AlphaEndColor, Mode=OneWay}"/>
                    </LinearGradientBrush>
                </controls:RgbColorChannelUserControl.SliderTrackBackground>
            </controls:RgbColorChannelUserControl>
            <controls:RgbColorChannelUserControl
                x:Uid="RedChannel"
                Header="R"
                Margin="0,4"
                Channel="{x:Bind Path=Red, Mode=TwoWay, FallbackValue=0}">
                <controls:RgbColorChannelUserControl.SliderTrackBackground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="{x:Bind Path=RedStartColor, Mode=OneWay}"/>
                        <GradientStop Offset="1" Color="{x:Bind Path=RedEndColor, Mode=OneWay}"/>
                    </LinearGradientBrush>
                </controls:RgbColorChannelUserControl.SliderTrackBackground>
            </controls:RgbColorChannelUserControl>
            <controls:RgbColorChannelUserControl
                x:Uid="GreenChannel"
                Header="G"
                Margin="0,4"
                Channel="{x:Bind Path=Green, Mode=TwoWay, FallbackValue=0}">
                <controls:RgbColorChannelUserControl.SliderTrackBackground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="{x:Bind Path=GreenStartColor, Mode=OneWay}"/>
                        <GradientStop Offset="1" Color="{x:Bind Path=GreenEndColor, Mode=OneWay}"/>
                    </LinearGradientBrush>
                </controls:RgbColorChannelUserControl.SliderTrackBackground>
            </controls:RgbColorChannelUserControl>
            <controls:RgbColorChannelUserControl
                x:Uid="BlueChannel"
                Margin="0,4,0,0"
                Header="B"
                Channel="{x:Bind Path=Blue, Mode=TwoWay, FallbackValue=0}">
                <controls:RgbColorChannelUserControl.SliderTrackBackground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="{x:Bind Path=BlueStartColor, Mode=OneWay}"/>
                        <GradientStop Offset="1" Color="{x:Bind Path=BlueEndColor, Mode=OneWay}"/>
                    </LinearGradientBrush>
                </controls:RgbColorChannelUserControl.SliderTrackBackground>
            </controls:RgbColorChannelUserControl>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Horizontal">
                    <VisualState.StateTriggers>
                        <triggers:OrientationMatchTrigger ExpectedValue="Horizontal" Value="{x:Bind Path=Orientation, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ColorPickerGrid.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="ColorPickerGrid.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="ColorPickerGrid.(RelativePanel.AlignRightWithPanel)" Value="False" />
                        <Setter Target="ColorPickerGrid.(RelativePanel.AlignBottomWithPanel)" Value="True" />

                        <Setter Target="ColorSliderPanel.(RelativePanel.RightOf)" Value="ColorPickerGrid" />
                        <Setter Target="ColorSliderPanel.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="ColorSliderPanel.(RelativePanel.AlignLeftWithPanel)" Value="False" />
                        <Setter Target="ColorSliderPanel.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="ColorSliderPanel.(RelativePanel.AlignBottomWithPanel)" Value="True" />

                        <Setter Target="PickerGridSquareBehavior.ScalableOrientation" Value="Vertical" />
                        <Setter Target="ColorPickerGrid.Margin" Value="0,0,4,0" />
                        <Setter Target="ColorSliderPanel.Margin" Value="4,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Vertical">
                    <VisualState.StateTriggers>
                        <triggers:OrientationMatchTrigger ExpectedValue="Vertical" Value="{x:Bind Path=Orientation, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ColorPickerGrid.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="ColorPickerGrid.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="ColorPickerGrid.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="ColorPickerGrid.(RelativePanel.AlignBottomWithPanel)" Value="False" />

                        <Setter Target="ColorSliderPanel.(RelativePanel.Below)" Value="ColorPickerGrid" />
                        <Setter Target="ColorSliderPanel.(RelativePanel.AlignTopWithPanel)" Value="False" />
                        <Setter Target="ColorSliderPanel.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="ColorSliderPanel.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="ColorSliderPanel.(RelativePanel.AlignBottomWithPanel)" Value="True" />

                        <Setter Target="PickerGridSquareBehavior.ScalableOrientation" Value="Horizontal" />
                        <Setter Target="ColorPickerGrid.Margin" Value="0,0,0,4" />
                        <Setter Target="ColorSliderPanel.Margin" Value="0,4,0,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</controls:BindableUserControl>